name: Build

on:
  workflow_call:

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Node.js
        uses: actions/setup-node@v6
        with:
          always-auth: true
          node-version-file: ".node-version"

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}

      - name: npm ci
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: npm ci

      - name: npm run build
        run: npm run build
        env:
          NEXT_PUBLIC_MICROCMS_API_KEY: ${{ secrets.NEXT_PUBLIC_MICROCMS_API_KEY }}
          NEXT_PUBLIC_MICROCMS_SERVICE_DOMAIN: ${{ secrets.NEXT_PUBLIC_MICROCMS_SERVICE_DOMAIN }}
          NEXT_PUBLIC_CONTENT_ID_ABOUT: ${{ secrets.NEXT_PUBLIC_CONTENT_ID_ABOUT }}
          NEXT_PUBLIC_CONTENT_ID_RESERVE: ${{ secrets.NEXT_PUBLIC_CONTENT_ID_RESERVE }}
          NEXT_PUBLIC_CONTENT_ID_SHOPINFO: ${{ secrets.NEXT_PUBLIC_CONTENT_ID_SHOPINFO }}
          NEXT_PUBLIC_CONTENT_ID_TERMS: ${{ secrets.NEXT_PUBLIC_CONTENT_ID_TERMS }}
          NEXT_PUBLIC_CONTENT_ID_CASELIST: ${{ secrets.NEXT_PUBLIC_CONTENT_ID_CASELIST }}
          NEXT_PUBLIC_API_ENDPOINT_SHOPINFO: ${{ secrets.NEXT_PUBLIC_API_ENDPOINT_SHOPINFO }}
          NEXT_PUBLIC_API_ENDPOINT_MENU: ${{ secrets.NEXT_PUBLIC_API_ENDPOINT_MENU }}
          NEXT_PUBLIC_API_ENDPOINT_TREATMENT: ${{ secrets.NEXT_PUBLIC_API_ENDPOINT_TREATMENT }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: out
          path: out
          retention-days: 1
